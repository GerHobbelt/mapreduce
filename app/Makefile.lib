# APP library multiple-machine Makefile

SHELL = /bin/sh

# Definitions

ROOT =	app
EXE =	lib$(ROOT)_$@.a

SRC =	app.cpp error.cpp input.cpp library.cpp  memory.cpp shell.cpp timer.cpp universe.cpp variable.cpp 

INC =	app.h error.h input.h library.h memory.h pointers.h shell.h style_command.h timer.h universe.h variable.h version.h 

OBJ =	$(SRC:.cpp=.o)

# Targets

help:
	@echo 'Type "make target" where target is one of:'
	@echo ''
	@files="`ls MAKE/Makefile.*`"; \
	for file in $$files; do head -1 $$file; done

clean:
	rm -rf Obj_*

.DEFAULT:
	@test -f MAKE/Makefile.$@
	@if [ ! -d Obj_$@ ]; then mkdir Obj_$@; fi
	@cp -p $(SRC) $(INC) Obj_$@
	@cp MAKE/Makefile.$@ Obj_$@/Makefile
	@cd Obj_$@; \
	$(MAKE) $(MFLAGS) "OBJ = $(OBJ)" "INC = $(INC)" "EXE = ../$(EXE)" lib
	@if [ -d Obj_$@ ]; then cd Obj_$@; rm -f $(SRC) $(INC) Makefile*; fi
