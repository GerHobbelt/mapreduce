This describes the bait.py Python tool that pre-processes a PHISH
input script into a form that can be executed by launching an MPI or
socket-based job.

Launch syntax:

bait.py -switch values ... < in.script

Command-line args for -switch and their values are discussed below.
The in.script is a PHISH input script (text file) that contains
a list of Bait.py input commands.

Command-line arguments
Input script syntax
Input script commands
  "variable"_variable.html
  "set"_set.html
  "minnow"_minnow.html
  "connect"_connect.html
  "layout"_layout.html :ul

:line
:line

Command-line arguments :h3

-np Np
  Np = process count
  default = 1
-var ID str1 str2 ...
  assign strings to a variable ID
  default = no variables defined
-hostfile filename
  file with list of processors to run on
  default = ""
-configfile filename
  filename = MPI config file to create
  default = "configfile"
-path path1:path2:path3:...
  colon-seperated paths to prepend to app executable names
  default = "."
-mode style
  manner in which PHISH job will be launched
  style = "mpich" or "openmpi" or "socket"
  default = "mpich"

each switch has an allowed abbreviation

-np or -n
-var or -v
-hostflie or -h
-configfile or -c
-path or -p
-mode or -m

:line

Input Script syntax

parsing rules

blank lines OK
comment char = #, delete all trailing
continuation char = &, with nothing following (including spaces)

variables are as follows ...

variable substitution:

what are rules for this?
should probably be $a for single-char variable, ${abc} for multichar



